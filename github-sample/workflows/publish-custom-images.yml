# File generated by gflows, do not modify
# Source: .gflows/workflows/publish-custom-images
name: Publish Custom Images
"on":
  workflow_run:
    workflows:
    - Publish Custom Images
    types:
    - completed
    branches:
    - master
    - main
jobs:
  version:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    name: Get version from git tag
    outputs:
      app_version: ${{ steps.version.outputs.app_version }}
      file_version: ${{ steps.version.outputs.file_version }}
      information_version: ${{ steps.version.outputs.information_version }}
      issue_id_slug: ${{ steps.issue-key.outputs.issue_id_slug }}
      docker_image_ali_cloud_tags: ${{ steps.tags.outputs.docker_image_ali_cloud_tags
        }}
      docker_image_ghcr_tags: ${{ steps.tags.outputs.docker_image_ghcr_tags }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Checkout GitHub Action Repos
      uses: daspn/private-actions-checkout@v2
      with:
        actions_list: '["covergo/get-version@v1.4","covergo/get-issue-key@v1.2","covergo/docker-extract@v1","covergo/docker-diagnose@v1.2","covergo/set-compose-tags@v1","covergo/run-in-compose@v1"]'
        checkout_base_path: ./.github/actions
        app_id: ${{ secrets.PRIVATE_ACTION_APP_ID }}
        app_private_key: ${{ secrets.PRIVATE_ACTION_APP_PRIVATE_KEY }}
    - name: Get jira Ticket slug
      id: issue-key
      uses: ./.github/actions/get-issue-key
    - name: Get version from git tags
      id: version
      uses: ./.github/actions/get-version
      with:
        build-number: none
        pre-release-version: ${{ steps.issue-key.outputs.issue_id_slug }}
    - name: Get docker image tags
      id: tags
      env:
        ghcr_versioned_tag: ghcr.io/covergo/auth:${{ steps.version.outputs.app_version
          }}
        ali_cloud_versioned_tag: registry-intl.cn-hongkong.aliyuncs.com/covergo/auth:${{
          steps.version.outputs.app_version }}
        ghcr_latest_tag: ghcr.io/covergo/auth:latest
        ali_cloud_latest_tag: registry-intl.cn-hongkong.aliyuncs.com/covergo/auth:latest
      run: "\nali_cloud_tags=${ali_cloud_versioned_tag}\nghcr_tags=${ghcr_versioned_tag}\n
        \ngit_ref=${{ github.ref }}\nbranch=${git_ref#refs/heads/}\nif [[ \"$branch\"
        = 'main' || \"$branch\" = 'master'  ]]; then\n  ali_cloud_tags=\"${ali_cloud_tags},${ali_cloud_latest_tag}\"\n
        \ ghcr_tags=\"${ghcr_tags},${ghcr_latest_tag}\"\nfi\n \necho final tags for
        ghcr are:  ${ghcr_tags}\necho final tags for ali are: ${ali_cloud_tags}\necho
        ::set-output name=docker_image_ghcr_tags::${ghcr_tags}\necho ::set-output
        name=docker_image_ali_cloud_tags::${ali_cloud_tags}\n"
  docker-build-custom-uat1:
    name: Build Custom Image UAT1 Image
    runs-on: ubuntu-latest
    needs:
    - version
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT_FULL }}
    - name: Login to AliCloud Container Registry
      uses: docker/login-action@v1
      with:
        registry: registry-intl.cn-hongkong.aliyuncs.com
        username: ${{ secrets.ALI_CONTAINER_REGISTRY_USER }}
        password: ${{ secrets.ALI_CONTAINER_REGISTRY_PASSWORD }}
    - name: Build and publish Custom Image UAT1 docker image
      uses: docker/build-push-action@v2
      id: docker-build-custom-uat1
      with:
        file: Custom-1.Dockerfile
        push: true
        tags: ghcr.io/covergo/auth:${{ needs.version.outputs.issue_id_slug }}
        cache-from: type=registry,ref=ghcr.io/covergo/auth:${{ needs.version.outputs.issue_id_slug
          }}
        cache-to: type=inline
    - name: Image digest
      run: echo ${{ steps.docker-build-custom-uat1.outputs.digest }}
  docker-publish-github-custom-uat1:
    name: Publish Custom Image UAT1 to GitHub
    runs-on: ubuntu-latest
    needs:
    - version
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT_FULL }}
    - name: Login to AliCloud Container Registry
      uses: docker/login-action@v1
      with:
        registry: registry-intl.cn-hongkong.aliyuncs.com
        username: ${{ secrets.ALI_CONTAINER_REGISTRY_USER }}
        password: ${{ secrets.ALI_CONTAINER_REGISTRY_PASSWORD }}
    - name: Build and publish Custom Image UAT1 docker image
      uses: docker/build-push-action@v2
      id: docker-build-custom-uat1
      with:
        file: Custom-1.Dockerfile
        push: true
        tags: ${{ needs.version.outputs.docker_image_ghcr_tags }}-custom-uat1
        cache-from: type=registry,ref=ghcr.io/covergo/auth:${{ needs.version.outputs.issue_id_slug
          }}
        cache-to: type=inline
    - name: Image digest
      run: echo ${{ steps.docker-build-custom-uat1.outputs.digest }}
  docker-build-custom-uat2:
    name: Build Custom Image UAT2 Image
    runs-on: ubuntu-latest
    needs:
    - version
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT_FULL }}
    - name: Login to AliCloud Container Registry
      uses: docker/login-action@v1
      with:
        registry: registry-intl.cn-hongkong.aliyuncs.com
        username: ${{ secrets.ALI_CONTAINER_REGISTRY_USER }}
        password: ${{ secrets.ALI_CONTAINER_REGISTRY_PASSWORD }}
    - name: Build and publish Custom Image UAT2 docker image
      uses: docker/build-push-action@v2
      id: docker-build-custom-uat2
      with:
        file: Custom-2.Dockerfile
        push: true
        tags: ghcr.io/covergo/auth:${{ needs.version.outputs.issue_id_slug }}
        cache-from: type=registry,ref=ghcr.io/covergo/auth:${{ needs.version.outputs.issue_id_slug
          }}
        cache-to: type=inline
    - name: Image digest
      run: echo ${{ steps.docker-build-custom-uat2.outputs.digest }}
  docker-publish-github-custom-uat2:
    name: Publish Custom Image UAT2 to GitHub
    runs-on: ubuntu-latest
    needs:
    - version
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT_FULL }}
    - name: Login to AliCloud Container Registry
      uses: docker/login-action@v1
      with:
        registry: registry-intl.cn-hongkong.aliyuncs.com
        username: ${{ secrets.ALI_CONTAINER_REGISTRY_USER }}
        password: ${{ secrets.ALI_CONTAINER_REGISTRY_PASSWORD }}
    - name: Build and publish Custom Image UAT2 docker image
      uses: docker/build-push-action@v2
      id: docker-build-custom-uat2
      with:
        file: Custom-2.Dockerfile
        push: true
        tags: ${{ needs.version.outputs.docker_image_ghcr_tags }}-custom-uat2
        cache-from: type=registry,ref=ghcr.io/covergo/auth:${{ needs.version.outputs.issue_id_slug
          }}
        cache-to: type=inline
    - name: Image digest
      run: echo ${{ steps.docker-build-custom-uat2.outputs.digest }}
